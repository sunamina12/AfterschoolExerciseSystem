<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.dao.WrongMapper" >
  <resultMap id="BaseResultMap" type="com.sy.pojo.Wrong" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stuId" property="stuid" jdbcType="INTEGER" />
    <result column="asgnId" property="asgnid" jdbcType="INTEGER" />
    <result column="quesId" property="quesid" jdbcType="INTEGER" />
    <result column="questype" property="questype" jdbcType="VARCHAR" />
    <result column="urAnswer" property="uranswer" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, stuId, asgnId, quesId, questype, urAnswer, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wrong
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByStuidAsgnid" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT * FROM wrong
     WHERE stuId = #{stuid,jdbcType=INTEGER} AND asgnId = #{asgnid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT * FROM wrong
  </select>
  <select id="selectByStuid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT * FROM wrong
    WHERE stuId = #{stuid,jdbcType=INTEGER}
  </select>
  <select id="asgnIdExist" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*) FROM wrong
    where asgnId = #{asgnId,jdbcType=INTEGER}
  </select>
  <select id="finishedNum" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(DISTINCT asgnId) FROM wrong
    where stuId = #{stuid,jdbcType=INTEGER}
  </select>
  <select id="getWrongNumByStuid" resultType="java.lang.Integer" parameterType="java.util.Map">
    SELECT COUNT(*) as num FROM wrong
    WHERE stuId = #{stuid,jdbcType=INTEGER} AND questype = #{questype,jdbcType=VARCHAR} AND status = #{status,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByStuidAsgnid" parameterType="java.util.Map">
    DELETE FROM wrong
    WHERE stuId = #{stuid,jdbcType=INTEGER} AND asgnId = #{asgnid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wrong
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sy.pojo.Wrong" >
    insert into wrong (id, stuId, asgnId, 
      quesId, questype, urAnswer, status
      )
    values (#{id,jdbcType=INTEGER}, #{stuid,jdbcType=INTEGER}, #{asgnid,jdbcType=INTEGER}, 
      #{quesid,jdbcType=INTEGER}, #{questype,jdbcType=VARCHAR}, #{uranswer,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sy.pojo.Wrong" >
    insert into wrong
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stuid != null" >
        stuId,
      </if>
      <if test="asgnid != null" >
        asgnId,
      </if>
      <if test="quesid != null" >
        quesId,
      </if>
      <if test="questype != null" >
        questype,
      </if>
      <if test="uranswer != null" >
        urAnswer,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuid != null" >
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="asgnid != null" >
        #{asgnid,jdbcType=INTEGER},
      </if>
      <if test="quesid != null" >
        #{quesid,jdbcType=INTEGER},
      </if>
      <if test="questype != null" >
        #{questype,jdbcType=VARCHAR},
      </if>
      <if test="uranswer != null" >
        #{uranswer,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sy.pojo.Wrong" >
  update wrong
  <set >
    <if test="stuid != null" >
      stuId = #{stuid,jdbcType=INTEGER},
    </if>
    <if test="asgnid != null" >
      asgnId = #{asgnid,jdbcType=INTEGER},
    </if>
    <if test="quesid != null" >
      quesId = #{quesid,jdbcType=INTEGER},
    </if>
    <if test="questype != null" >
      questype = #{questype,jdbcType=VARCHAR},
    </if>
    <if test="uranswer != null" >
      urAnswer = #{uranswer,jdbcType=VARCHAR},
    </if>
    <if test="status != null" >
      status = #{status,jdbcType=VARCHAR},
    </if>
  </set>
  where id = #{id,jdbcType=INTEGER}
</update>
  <update id="updateByStuidQuesidSelective" parameterType="com.sy.pojo.Wrong" >
    update wrong
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where stuId = #{stuid,jdbcType=INTEGER} AND quesId = #{quesid,jdbcType=INTEGER} AND questype = #{questype,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sy.pojo.Wrong" >
    update wrong
    set stuId = #{stuid,jdbcType=INTEGER},
      asgnId = #{asgnid,jdbcType=INTEGER},
      quesId = #{quesid,jdbcType=INTEGER},
      questype = #{questype,jdbcType=VARCHAR},
      urAnswer = #{uranswer,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>